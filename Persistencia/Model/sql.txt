
create table Administrador(
    idAdministrador int not null auto_increment,
    nombre varchar(50) not null,
    apellido varchar(50) not null,
    email varchar(50) unique not null,
    clave varchar(100) not null,
    foto varchar(100),
    primary key(idAdministrador)
);

create table Cliente(
    idCliente int not null auto_increment,
    nombre varchar(50) not null,
    apellido varchar(50) not null,
    email varchar(50) unique not null,
    clave varchar(100) not null,
    foto varchar(100),
    estado int not null,
    activation varchar(50),
    primary key(idCliente)
);
create table Categoria(
    idCategoria int not null auto_increment,
    nombre varchar(50) not null,
    primary key(idCategoria)
);
create table Producto(
    idProducto int not null auto_increment,
    nombre varchar(50) not null,
    foto varchar(200) not null,
    descripcion varchar(200) null,
    precio float not null,
    FK_idCategoria int not null,
    primary key(idProducto),
    Foreign key (FK_idCategoria) references Categoria(idCategoria)
);

create table Proveedor(
    idProveedor int not null auto_increment,
    nit bigint unique not null,
    nombre varchar(50) not null,
    telefono int not null,
    direccion varchar(100) not null,
    primary key(idProveedor)
);

create table Ingrediente(
    idIngrediente int not null auto_increment,
    nombre varchar(50) not null,
    cantidad int not null,
    FK_idProveedor int not null,
    primary key(idIngrediente),
    Foreign key (FK_idProveedor) references Proveedor(idProveedor)
);

create table IngredienteProducto(
    FK_idProducto int not null,
    FK_idIngrediente int not null,
    cantidad int not null,
    primary key(FK_idProducto, FK_idIngrediente),
    Foreign key (FK_idProducto) references Producto(idProducto),
    Foreign key (FK_idIngrediente) references Ingrediente(idIngrediente)
);

create table factura(
    idFactura int not null auto_increment,
    fecha datetime not null,
    valor float not null,
    FK_idCliente int not null,
    primary key(idFactura),
    Foreign key (FK_idCliente) references Cliente(idCliente) 
);

create table FacturaProducto(
    FK_idFactura int not null,
    FK_idProducto int not null,
    cantidad int not null,
    precio float not null,
    primary key(FK_idFactura, FK_idProducto),
    Foreign key (FK_idFactura) references Factura(idFactura),
    Foreign key (FK_idProducto) references Producto(idProducto)
);

create table Inventarista(
    idInventarista int not null auto_increment,
    nombre varchar(50) not null,
    apellido varchar(50) not null,
    email varchar(50) unique not null,
    clave varchar(100) not null,
    foto varchar(100),
    estado int not null,
    primary key(idInventarista)
);

create table Accion(
    idAccion int not null auto_increment,
    nombre varchar(100) not null,
    primary key(idAccion)
);

create table LogAdministrador(
    idLogAdministrador int not null auto_increment,
    fecha datetime not null,
    informacion text not null,
    FK_idAccion int not null,
    browser varchar(50) not null,
    os varchar(50) not null,
    FK_idAdministrador int not null,
    primary key(idLogAdministrador),
    Foreign key (FK_idAccion) references Accion(idAccion),
    Foreign key (FK_idAdministrador) references Administrador(idAdministrador)
);

create table LogInventarista(
    idLogInventarista int not null auto_increment,
    fecha datetime not null,
    informacion text not null,
    FK_idAccion int not null,
    browser varchar(50) not null,
    os varchar(50) not null,
    FK_idInventarista int not null,
    primary key(idLogInventarista),
    Foreign key (FK_idAccion) references Accion(idAccion),
    Foreign key (FK_idInventarista) references Inventarista(idInventarista)
);

create table LogCliente(
    idLogCliente int not null auto_increment,
    fecha datetime not null,
    informacion text not null,
    FK_idAccion int not null,
    browser varchar(50) not null,
    os varchar(50) not null,
    FK_idCliente int not null,
    primary key(idLogCliente),
    Foreign key (FK_idAccion) references Accion(idAccion),
    Foreign key (FK_idCliente) references Cliente(idCliente)
);

Ala
aceites

Aderezos
aji

comidas 
hamburguesas
Lasa√±a
chorizo artesanal

Bebidas Saludables
Smothies
Jugos saludables

Chef en casa y parriladas